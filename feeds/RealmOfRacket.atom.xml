<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">好记性不如烂笔头: Posts tagged 'RealmOfRacket'</title>
 <link rel="self" href="https://zhuzhonghua.github.com/feeds/RealmOfRacket.atom.xml" />
 <link href="https://zhuzhonghua.github.com/tags/RealmOfRacket.html" />
 <id>urn:https-zhuzhonghua-github-com:-tags-RealmOfRacket-html</id>
 <updated>2018-01-14T06:43:32Z</updated>
 <entry>
  <title type="text">Realm Of Racket - (big-bang)</title>
  <link rel="alternate" href="https://zhuzhonghua.github.com/2018/01/realm-of-racket-big-bang.html?utm_source=RealmOfRacket&amp;utm_medium=Atom" />
  <id>urn:https-zhuzhonghua-github-com:-2018-01-realm-of-racket-big-bang-html</id>
  <published>2018-01-14T06:43:32Z</published>
  <updated>2018-01-14T06:43:32Z</updated>
  <author>
   <name>ZhongHua</name></author>
  <content type="html">
&lt;h1 id="big-bang"&gt;(big-bang)&lt;/h1&gt;

&lt;p&gt;上一次的程序是命令行式的，这次写一些GUI(gooey)的程序
 &lt;br /&gt;这次使用Racket里自带的2htdp/universe 2htdp/image&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#lang racket
(require 2htdp/universe 2htdp/image)

(big-bang 0
	(on-tick add-3-to-state)
	(to-draw draw-a-ufo-onto-an-empty-scene))  
	&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;big-bang 创造了一个World, World是由状态和视图组成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (add-3-to-state current-state)
	(+ current-state 3))  
	&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;add&amp;ndash;3-to-state 把当前状态+3，然后返回，big-bang会把add&amp;ndash;3-to-state返回的值标记为下一个状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (draw-a-ufo-onto-an-empty-scene current-state)
	(place-image IMAGE-of-UFO (/ WIDTH 2) current-state
		(empty-scene WIDTH HEIGHT)))  
		&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;draw-a-ufo-onto-an-empty-scene 把ufo的图片根据 current-state 绘制到特定位置
 &lt;br /&gt;当图片落地时，动画得停下来&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (state-is-300 current-state)
	(&amp;gt;= current-state 300))
	
(big-bang 0
	(on-tick add-3-to-state)
	(to-draw draw-a-ufo-onto-an-empty-scene)
	(stop-when state-is-300))
	&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用state-is&amp;ndash;300和big-bang的stop-when来修改World的状态和视图&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(big-bang state-expression
	(to-draw draw-function)
	(on-tick tick-function)
	(on-key key-function)
	(stop-when stop-function optional-last-scene))
	
	&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;big-bang大致长这样，state-expression是WOrld的初始状态，to-draw是把当前状态绘制到屏幕上，on-tick就是每tick调用的函数，on-key是当有输入操作，如键盘鼠标或者其他输入设备，调用的函数，在key-function里可以对状态进行修改，stop-when就是想让世界停下来的一个函数判断&lt;/p&gt;

&lt;p&gt;该示例的完整源码在 {Racket的安装目录}/share/pkgs/realm/chapter5/ufo-source.rkt里&lt;/p&gt;

&lt;h1 id="写一个gui版本的猜数字游戏"&gt;写一个GUI版本的猜数字游戏&lt;/h1&gt;

&lt;p&gt;好的数据结构会让程序有很大的不同&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;struct interval (small big))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;代表猜数字的上下限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define HELP-TEXT
	(text " for larger numbers, for smaller ones"
		TEXT-SIZE
		"blue"))
(define HELP-TEXT2
	(text "Press = when your number is guessed; q to quit."
		TEXT-SIZE
		"blue"))
(define COLOR "red")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;游戏指令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define MT-SC
	(place-image/align
		HELP-TEXT TEXT-X TEXT-UPPER-Y "left" "top"
		(place-image/align
			HELP-TEXT2 TEXT-X TEXT-LOWER-Y "left" "bottom"
			(empty-scene WIDTH HEIGHT))))
			&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;定义常量，作为游戏的背景&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (start lower upper)
	(big-bang (interval lower upper)
		(on-key deal-with-guess)
		(to-draw render)
		(stop-when single? render-last-scene)))
		&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个可以作为Main函数&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (deal-with-guess w key)
	(cond [(key=? key "up") (bigger w)]
		[(key=? key "down") (smaller w)]
		[(key=? key "q") (stop-with w)]
		[(key=? key "=") (stop-with w)]
		[else w]))  
		&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;deal-with-guess 根据不同的key返回不同的状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (smaller w)
	(interval (interval-small w)
		(max (interval-small w) (sub1 (guess w)))))  
		
(define (bigger w)
	(interval (min (interval-big w) (add1 (guess w)))
		(interval-big w)))  
		&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;smaller和bigger都是创建了新的interval结构体&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (guess w)
	(quotient (+ (interval-small w) (interval-big w)) 2))  
	&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;guess函数取结构的上下限，加起来然后/2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (render w)
	(overlay (text (number-&amp;gt;string (guess w)) SIZE COLOR) MT-SC))  
	&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;render把猜的数字展示到MT-SC定义的背景上&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (render-last-scene w)
	(overlay (text "End" SIZE COLOR) MT-SC))
	&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当游戏结束调用的函数&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (single? w)
	(= (interval-small w) (interval-big w)))  
	&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;single?比较上下限，决定是否结束游戏&lt;/p&gt;

&lt;p&gt;猜数字的GUI版本的完整代码在 {Racket的安装目录}/share/pkgs/realm/chapter5/source.rkt&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">Realm Of Racket-猜数字</title>
  <link rel="alternate" href="https://zhuzhonghua.github.com/2017/10/realm-of-racket-%E7%8C%9C%E6%95%B0%E5%AD%97.html?utm_source=RealmOfRacket&amp;utm_medium=Atom" />
  <id>urn:https-zhuzhonghua-github-com:-2017-10-realm-of-racket-E7-8C-9C-E6-95-B0-E5-AD-97-html</id>
  <published>2017-10-11T05:45:01Z</published>
  <updated>2017-10-11T05:45:01Z</updated>
  <author>
   <name>ZhongHua</name></author>
  <content type="html">
&lt;p&gt;(A First Racket Program)&lt;/p&gt;

&lt;p&gt;猜数字，最简单，最古老的游戏
 &lt;br /&gt;游戏虽然简单，但是用上了二分查找的方法&lt;/p&gt;

&lt;p&gt;假设数字是18，大概过程是这样&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;(guess)  
50  
&amp;gt;(smaller)  
25  
&amp;gt;(smaller))  
12  
&amp;gt;(bigger)  
18  &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;三个基本功能，(guess),(smaller),(bigger)&lt;/p&gt;

&lt;p&gt;首先定义上下边界
 &lt;br /&gt;用define定义变量&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;(define lower 1)  
&amp;gt;lower  
1  
&amp;gt;(define upper 100)  
&amp;gt;upper  
100  &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用define定义函数, 基本形式是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (function-name argument-name ...)
  function-body-expression
  function-body-expression
...)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;guess的定义如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (guess)
  (quotient (+ lower upper) 2))&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;guess函数没有参数，直接写(guess), 接下来就是取lower和upper的中间值&lt;/p&gt;

&lt;p&gt;smaller的定义&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (smaller)
  (set! upper (max lower (sub1 (guess))))
  (guess))&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;set!读作set-bang，基本形式&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(set! variable expression)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;给variable赋值expression
 &lt;br /&gt;smaller先算出新的upper，然后再赋值给upper，然后再展示新的(guess)值&lt;/p&gt;

&lt;p&gt;bigger的定义&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (bigger)
  (set! lower (min upper (add1 (guess))))
  (guess))&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;与smaller类似，计算新的lower，然后展示新的(guess)&lt;/p&gt;

&lt;p&gt;main函数&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(define (start n m)
  (set! lower (min n m))
  (set! upper (max n m))
  (guess))&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;跟上面的guess对比，start有参数，(start n m)
 &lt;br /&gt;使用min和max，参数的顺序可以任意&lt;/p&gt;

&lt;p&gt;假设我们猜的数字是19&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;(start 1 30)
15
&amp;gt;(bigger))
23
&amp;gt;(smaller)
19)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;总结：
 &lt;br /&gt;1. 使用define定义变量和函数，函数区分有参数和无参数
 &lt;br /&gt;2. 使用set!(set-bang)改变变量的值&lt;/p&gt;</content></entry></feed>